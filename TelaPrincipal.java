/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Main.java to edit this template
 */




package alexprojetofinal_1;




import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


    
            
        

   

    
    
/**
 *
 * @author Alex
 */
public class TelaPrincipal extends javax.swing.JFrame {
 private final DefaultTableModel modelo = new DefaultTableModel();

 private final ClienteMapDAO clienteDAO = new ClienteMapDAO();
 
 
 
 
 
    /**
     * Creates new form TelaPrincipal
     */
    public TelaPrincipal() {
        initComponents();
        initCustomComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LBLNome = new javax.swing.JLabel();
        TXTNOME = new javax.swing.JTextField();
        BTNSalvar = new javax.swing.JButton();
        LBL_CPF = new javax.swing.JLabel();
        TXT_CPF = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabela_Principal = new javax.swing.JTable();
        BTN_Limpar = new javax.swing.JButton();
        btn_Excluir = new javax.swing.JButton();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        LBLNome.setText("Nome:");

        BTNSalvar.setText("Salvar");
        BTNSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNSalvarActionPerformed(evt);
            }
        });

        LBL_CPF.setText("CPF");

        Tabela_Principal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Tabela_Principal.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                Tabela_PrincipalAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(Tabela_Principal);

        BTN_Limpar.setText("Limpar");
        BTN_Limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_LimparActionPerformed(evt);
            }
        });

        btn_Excluir.setText("Excluir");
        btn_Excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ExcluirActionPerformed(evt);
            }
        });

        jMenu1.setText("Opções");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jMenuItem1.setText("Sair");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar2.add(jMenu1);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(167, 167, 167)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(LBL_CPF, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(TXT_CPF, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(LBLNome, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TXTNOME, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 100, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BTN_Limpar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BTNSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_Excluir)
                .addGap(180, 180, 180))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LBLNome, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TXTNOME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LBL_CPF)
                    .addComponent(TXT_CPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BTNSalvar)
                    .addComponent(BTN_Limpar)
                    .addComponent(btn_Excluir))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
         int result = JOptionPane.showConfirmDialog(this,"Deseja sair da aplicação?", "Sair",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE);
        if(result == JOptionPane.YES_OPTION){
            System.exit(0);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        // TODO add your handling code here:
        
       
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void BTNSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNSalvarActionPerformed
       // Suponha que você tenha uma forma de coletar o nome e CPF
    String nome = TXTNOME.getText(); // Exemplo de como você pega o nome
    String cpf = TXT_CPF.getText();   // Exemplo de como você pega o CPF
    
    // Acessa o modelo da tabela
    DefaultTableModel modelo = (DefaultTableModel) Tabela_Principal.getModel();
    
    // Adiciona uma nova linha à tabela
    modelo.addRow(new Object[]{nome, cpf});
    
    // Opcional: Limpar os campos de entrada após salvar
    TXTNOME.setText("");
    TXT_CPF.setText("");
    
    // Exemplo de mensagem de sucesso
    JOptionPane.showMessageDialog(null, "Cadastro realizado com sucesso!");
    }//GEN-LAST:event_BTNSalvarActionPerformed

    private void BTN_LimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_LimparActionPerformed
        // TODO add your handling code here:
         limparCampos();
    }//GEN-LAST:event_BTN_LimparActionPerformed

    private void Tabela_PrincipalAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_Tabela_PrincipalAncestorAdded
        // TODO add your handling code here:
        DefaultTableModel modelo = (DefaultTableModel) Tabela_Principal.getModel();
    for (int i = 0; i < modelo.getRowCount(); i++) {
        String nome = (String) modelo.getValueAt(i, 0);  // Obtendo o nome na coluna 0
        String cpf = (String) modelo.getValueAt(i, 1);   // Obtendo o CPF na coluna 1
        System.out.println("Nome: " + nome + " | CPF: " + cpf);  // Imprime no console
    }

    






 
    }//GEN-LAST:event_Tabela_PrincipalAncestorAdded

    private void btn_ExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ExcluirActionPerformed
    // Identifica a linha selecionada na tabela
    int linhaSelecionada = Tabela_Principal.getSelectedRow();
    
    // Verifica se uma linha foi selecionada
    if (linhaSelecionada != -1) {
        // Acessa o modelo da tabela
        DefaultTableModel modelo = (DefaultTableModel) Tabela_Principal.getModel();
        
        // Remove a linha selecionada
        modelo.removeRow(linhaSelecionada);
        
        // Exibe mensagem de sucesso
        JOptionPane.showMessageDialog(null, "Cliente excluído com sucesso!");
    } else {
        // Se nenhuma linha for selecionada, exibe uma mensagem
        JOptionPane.showMessageDialog(null, "Selecione uma linha para excluir.");
    }

    }//GEN-LAST:event_btn_ExcluirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
     //</editor-fold>
     
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTNSalvar;
    private javax.swing.JButton BTN_Limpar;
    private javax.swing.JLabel LBLNome;
    private javax.swing.JLabel LBL_CPF;
    private javax.swing.JTextField TXTNOME;
    private javax.swing.JTextField TXT_CPF;
    private javax.swing.JTable Tabela_Principal;
    private javax.swing.JButton btn_Excluir;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private boolean isCamposValidos(String ...campos) {
       for (String campo : campos){
           if (campos == null || "". equals (campo)){
           return false;
       }  
       }
          return true;
}

  private void initCustomComponents() {
    DefaultTableModel modelo = new DefaultTableModel();
    modelo.addColumn("Nome");
    modelo.addColumn("CPF");
    
    // Associar o modelo à tabela
    Tabela_Principal.setModel(modelo);
}

   private void limparCampos() {
        TXTNOME.setText("");
        TXT_CPF.setText("");
        
    }

    private static class ClienteMapDAO {

        public ClienteMapDAO() {
            
        }

        private void excluir(String cpf) {
            throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        }

        private Boolean cadastrar(Cliente cliente) {
            throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        }
    }
    }



    
     
    
       
    
       

